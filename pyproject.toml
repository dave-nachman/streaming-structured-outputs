[tool.poetry]
name = "streaming-structured-outputs"
version = "0.1.0"
description = "A library for streaming structured outputs from OpenAI LLMs"
authors = ["Dave Nachman <dave.nachman.dev@gmail.com>"]
readme = "README.md"
homepage = "https://github.com/dave-nachman/streaming-structured-outputs"
repository = "https://github.com/dave-nachman/streaming-structured-outputs"
keywords = ["openai", "llm", "streaming", "structured", "outputs", "pydantic"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]


[tool.poetry.dependencies]
python = ">=3.9,<4.0"
pydantic = ">=1.9.0, <3"
httpx = ">=0.23.0, <1"
httpx-sse = "==0.4.*"
pydantic-partial = ">=0.5.0, <1"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
ruff = "^0.3.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = ["E501"]  # Ignore line too long errors

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"